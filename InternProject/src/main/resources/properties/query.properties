board.calculateBoardId=SELECT MIN(id) FROM board;
board.listUpBoard=SELECT * FROM board ORDER BY id;

post.countPageNumber=SELECT COUNT(*) FROM post WHERE board_id = ?;
post.listUpPost=SELECT p.*, u.name user_name FROM post p, user u WHERE board_id = ? AND p.user_id = u.id ORDER BY post_number DESC LIMIT ?, ?;
post.getPostById=SELECT p.*, u.name user_name FROM post p, user u WHERE p.user_id = u.id AND p.id = ?;
post.countUpHitCount=UPDATE post SET hit_count = hit_count + 1 WHERE id = ?;
post.postPost=INSERT INTO post(user_id, post_number, board_id, title, contents) VALUES(?, ?, ?, ?, ?);
post.calculateLastPostNumber=SELECT MAX(post_number) FROM post WHERE board_id = ?;
post.deletePost=DELETE FROM post WHERE id = ?;
post.gotoTrash=INSERT INTO trash_post SELECT * FROM post WHERE id = ?;
post.modifyPost=UPDATE post SET title = ?, contents = ?, modify_date = CURRENT_TIMESTAMP WHERE id = ?;

comment.listUpComment=SELECT c.*, u.name user_name FROM comment c, user u WHERE post_id = ? AND c.user_id = u.id ORDER BY id, parent_comment_id;
comment.writeComment=INSERT INTO comment(parent_comment_id, post_id, user_id, depth, contents) VALUES(?, ?, ?, ?, ?);
comment.deleteComment=UPDATE comment SET contents = "\uc0ad\uc81c\ub41c \ub313\uae00", is_deleted = true WHERE id = ?;
comment.gotoTrash=INSERT INTO trash_comment SELECT * FROM comment WHERE id = ?; 
comment.modifyComment=UPDATE comment SET contents = ?, modify_date = CURRENT_TIMESTAMP WHERE id = ?;
comment.deleteCommentByPostId=DELETE FROM comment WHERE post_id = ?;
comment.gotoTrashByPostId=INSERT INTO trash_comment SELECT * FROM comment WHERE post_id = ?;

file.saveFile=INSERT INTO file(post_id, location, original_file_name, size, type) VALUES(?, ?, ?, ?, ?);
file.getFileByPostId=SELECT * FROM file WHERE post_id = ?;
file.getFileByFileId=SELECT * FROM file WHERE id = ?;
file.deleteFile=DELETE FROM file WHERE post_id = ?;
file.gotoTrash=INSERT INTO trash_file SELECT * FROM file WHERE post_id = ?;

user.createUser=INSERT INTO user(email, name, password) VALUES(?, ?, PASSWORD(?));
user.checkExistUser=SELECT EXISTS(SELECT * FROM user WHERE email = ?);
user.checkValidLogin=SELECT EXISTS(SELECT * FROM user WHERE email = ? AND password = PASSWORD(?));
user.extractLevel=SELECT level FROM user WHERE email = ?;
user.getUserByEmail=SELECT * FROM user WHERE email = ?;
user.modifyUser=UPDATE user SET password = PASSWORD(?), name = ? WHERE id = ?; 